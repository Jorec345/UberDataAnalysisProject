Months = factor(months(as.Date(`Date Requested`)),
levels = month.name),
FullNames = paste(`First Name`,`Last Name`))%>%
select(9,10,13,12,17,19,20,21,22)%>%
group_by(FullNames,Year)%>%
count()%>%
arrange(desc(n))
###consuming in the departments data
EmployeeData <- read.csv("EmployeeNames.csv",header=TRUE)
EmployeeYearlyExpense$FullNames
##creating a forloop that matches each name to the department.
codes = EmployeeData$Employee.Name
Department <- vector(mode="character", length=nrow(EmployeeYearlyExpense))
for (i in 1:nrow(EmployeeYearlyExpense)) {
idx = match(EmployeeYearlyExpense$FullNames[i], codes)
Department[i] <- EmployeeData$Department[idx]
}
###analysis of Total spending by department and expense code****
DepartExpense <-
cbind(EmployeeYearlyExpense,Department)%>%
rename(Departments = ...4)%>%
group_by(Departments,Year)%>%
summarise(TotalSpending = sum(Individual_Charges))%>%
arrange(desc(TotalSpending))
Ind.EmployeeYearlyExpense
##individual employee expenses
EmployeeYearlyExpense <-
New.UberData%>%
mutate(Year = as.numeric(format(`Date Requested`, "%Y")),
Months = factor(months(as.Date(`Date Requested`)),
levels = month.name),
FullNames = paste(`First Name`,`Last Name`))%>%
select(9,10,13,12,17,19,20,21,22)%>%
group_by(FullNames,Year)%>%
summarise(Individual_Charges = sum(Charges))%>%
arrange(desc(Individual_Charges))
New.UberData%>%
mutate(Year = as.numeric(format(`Date Requested`, "%Y")),
Months = factor(months(as.Date(`Date Requested`)),
levels = month.name),
FullNames = paste(`First Name`,`Last Name`))%>%
select(9,10,13,12,17,19,20,21,22)%>%
group_by(FullNames,Year)%>%
count()%>%
arrange(desc(n))
##individual employee total orders**
EmployeeFrequencyofOrder<-
New.UberData%>%
mutate(Year = as.numeric(format(`Date Requested`, "%Y")),
Months = factor(months(as.Date(`Date Requested`)),
levels = month.name),
FullNames = paste(`First Name`,`Last Name`))%>%
select(9,10,13,12,17,19,20,21,22)%>%
group_by(FullNames,Year)%>%
count()%>%
arrange(desc(n))
EmployeeFrequencyofOrder
##individual employee expenses
EmployeeYearlyExpense <-
New.UberData%>%
mutate(Year = as.numeric(format(`Date Requested`, "%Y")),
Months = factor(months(as.Date(`Date Requested`)),
levels = month.name),
FullNames = paste(`First Name`,`Last Name`))%>%
select(9,10,13,12,17,19,20,21,22)%>%
group_by(FullNames,Year)%>%
summarise(Individual_Charges = sum(Charges))%>%
arrange(desc(Individual_Charges))
###consuming in the departments data
EmployeeData <- read.csv("EmployeeNames.csv",header=TRUE)
EmployeeYearlyExpense$FullNames
##creating a forloop that matches each name to the department.
codes = EmployeeData$Employee.Name
Department <- vector(mode="character", length=nrow(EmployeeYearlyExpense))
for (i in 1:nrow(EmployeeYearlyExpense)) {
idx = match(EmployeeYearlyExpense$FullNames[i], codes)
Department[i] <- EmployeeData$Department[idx]
}
###analysis of Total spending by department and expense code****
DepartExpense <-
cbind(EmployeeYearlyExpense,Department)%>%
rename(Departments = ...4)%>%
group_by(Departments,Year)%>%
summarise(TotalSpending = sum(Individual_Charges))%>%
arrange(desc(TotalSpending))
DepartExpense
##visualising spending by expense code
ggplot(data = DepartExpense, aes(x = Departments, y = TotalSpending))+
geom_bar(stat = 'identity', aes(fill = Departments))+
facet_grid(.~Year)+
theme_grey()+
labs(title = 'spending by expense code',
y = 'TotalSpending', x = 'Departments')
YearlyData
ggplot(YearlyData, aes(x= Year, y=summedTotals, fill= summedTotals)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) +
geom_text(aes(
label = percent(col2/sum_of_obsrv )), size=5)
ggplot(YearlyData, aes(x= Year, y=summedTotals, fill= summedTotals)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) +
geom_text(aes(
label = percent(sum(summedTotals)/summedTotals)), size=5)
ggplot(YearlyData, aes(x= Year, y=summedTotals, fill= summedTotals)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0)
ggplot(YearlyData, aes(x= Year, y=summedTotals, fill= summedTotals)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) +
geom_text(aes(label = percent(sum(summedTotals)/summedTotals[i])), size=5)
library(ggrepel)
library(forcats)
library(scales)
ggplot(YearlyData, aes(x= Year, y=summedTotals, fill= summedTotals)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) +
geom_text(aes(label = percent(sum(summedTotals)/summedTotals[i])), size=5)
pie <- ggplot(YearlyData, aes(x= Year, y=summedTotals, fill= summedTotals)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) +
geom_text(aes(label = percent(sum(summedTotals)/summedTotals[i])), size=5)
print(pie)
library(ggrepel)
library(forcats)
library(scales)
ggplot(YearlyData, aes(x= Year, y=summedTotals, fill= summedTotals)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) +
geom_text(aes(label = percent(sum(summedTotals)/summedTotals[i])), size=5)
percent(sum(summedTotals)/summedTotals[i]))
ggplot(YearlyData, aes(x= Year, y=summedTotals, fill= summedTotals)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) +
geom_text(aes(label = percent(sum(summedTotals)/summedTotals[i]), size=5))
ggplot(YearlyData, aes(x= summedTotals, y=Year, fill= Year)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0)
ggplot(YearlyData, aes(x= summedTotals, y=Year, fill= Year)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) +
geom_text(aes(label = percent(sum(summedTotals)/summedTotals[i]), size=5))
percent(sum(summedTotals)/summedTotals[i])
pie(YearlyData$summedTotals,
labels = YearlyData$Year + percent(sum(summedTotals)/1:length(summedTotals)),
main = "Yearly Expenditure on Uber", col = c("red","blue"))
legend("bottomleft",YearlyData$Year,fill = c("red","blue"))
percent(sum(summedTotals)/1:length(summedTotals))
EmployeeFrequencyofOrder
ggplot(EmployeeFrequencyofOrder,aes(fill = FullNames,x = FullNames,y = n))+
geom_histogram(position = "dodge",stat = "identity")+
facet_grid(.~Year)+
ggtitle("Frequency of Uber orders")
library(dplyr)
library(readr)
library(stats)
library(chron)
library(tidyverse)
library(data.table)
library(hrbrthemes)
library(tidyr)
library(viridis)
library(ggpubr)
library(psych)
library(lubridate)
library(ggrepel)
library(forcats)
library(scales)
##consuming in the 2018 Data
UberData <- read.csv("UberData.csv",header = TRUE, stringsAsFactors = FALSE)
##cleaning and processing the Data my data
New.UberData <-
UberData%>%
mutate(Duration = as.numeric(Duration..min.),
GST = as.numeric(GST.amount),
datetime = paste(Request.Date..Local.,Request.Time..Local.),
"Request Time" = strptime(datetime, format = "%m/%d/%Y %H:%M"),
"Date Requested" = as.IDate(`Request Time`),
dayofweek = weekdays(`Date Requested`),
"Time Requested" = format(strptime(`Request.Time..Local.`,"%I:%M %p"),
format = "%H:%M"),
hours = as.numeric(format(strptime(`Request.Time..Local.`,"%I:%M %p"),
format = "%H")),
Year = as.numeric(format(`Date Requested`, "%Y")),
Months = factor(months(as.Date(`Date Requested`)),
levels = month.name))%>%
select(-c(1,2,9,10,20,21))%>%
rename("First Name" = First.Name,
"Last Name" = Last.Name,
"Employee ID" = Employee.ID,
"Distance" = Distance..mi.,
"Service and Tech Fees"= Service.and.Technology.Fee,
"Dropoff Address"= Dropoff.Address,
"Pickup Address" = Pickup.Address,
"Expense Code"= Expense.Code,
"Expense Memo"= Expense.Memo,
"Fare" = Fare.in.KES,
"Charges" = Total.Charge.in.KES)
##handling missing values by replacing them with 0
New.UberData$GST[which(is.na(New.UberData$GST))] <- 0
##Exploratory Data Analysis
##analysis by year
YearlyData <-
New.UberData%>%
mutate(Year = as.numeric(format(`Date Requested`, "%Y")))%>%
select(Charges,Months,Year)%>%
group_by(Year)%>%
summarise(summedTotals = sum(Charges))
###analysis of expenditure trends by months
MonthlyData <-
New.UberData%>%
mutate(Year = as.numeric(format(`Date Requested`, "%Y")),
Months = factor(months(as.Date(`Date Requested`)),
levels = month.name))%>%
select(Charges,Months,Year)%>%
group_by(Months, Year)%>%
summarise(MonthlyTotals = sum(Charges))
##Employee STATS Analysis
##Total Number of employee uber orders by Months
EmployeeMonthlyFreq <-
New.UberData%>%
mutate(Year = as.numeric(format(`Date Requested`, "%Y")),
Months = factor(months(as.Date(`Date Requested`)),
levels = month.name),
FullNames = paste(`First Name`,`Last Name`))%>%
select(9,12,17,19,20,21,22)%>%
group_by(Months,Year)%>%
count()%>%
rename(Freq = n)
##Visualizing Employee stats with a histogram
ggplot(EmployeeMonthlyFreq,aes(fill = Months,x = Months,y = Freq))+
geom_histogram(position = "dodge",stat = "identity")+
facet_grid(.~Year)+
ggtitle("Frequency of Uber orders")
##individual employee total orders**
EmployeeFrequencyofOrder<-
New.UberData%>%
mutate(Year = as.numeric(format(`Date Requested`, "%Y")),
Months = factor(months(as.Date(`Date Requested`)),
levels = month.name),
FullNames = paste(`First Name`,`Last Name`))%>%
select(9,10,13,12,17,19,20,21,22)%>%
group_by(FullNames,Year)%>%
count()%>%
arrange(desc(n))
ggplot(EmployeeFrequencyofOrder,aes(fill = FullNames,x = FullNames,y = n))+
geom_histogram(position = "dodge",stat = "identity")+
facet_grid(.~Year)+
ggtitle("Frequency of Uber orders")
EmployeeFrequencyofOrder
New.UberData%>%
mutate(Year = as.numeric(format(`Date Requested`, "%Y")),
Months = factor(months(as.Date(`Date Requested`)),
levels = month.name),
FullNames = paste(`First Name`,`Last Name`))%>%
select(9,10,13,12,17,19,20,21,22)%>%
group_by(FullNames,Year)%>%
count()%>%
arrange(desc(n))%>%
filter(Year == "2017")
##individual employee total orders**
EmployeeFrequencyofOrder<-
New.UberData%>%
mutate(Year = as.numeric(format(`Date Requested`, "%Y")),
Months = factor(months(as.Date(`Date Requested`)),
levels = month.name),
FullNames = paste(`First Name`,`Last Name`))%>%
select(9,10,13,12,17,19,20,21,22)%>%
group_by(FullNames,Year)%>%
count()%>%
arrange(desc(n))%>%
filter(Year == "2017")
ggplot(EmployeeFrequencyofOrder,aes(fill = FullNames,x = FullNames,y = n))+
geom_histogram(position = "dodge",stat = "identity")+
facet_grid(.~Year)+
ggtitle("Frequency of Uber orders")
EmployeeYearlyExpense
##individual employee expenses
EmployeeYearlyExpense <-
New.UberData%>%
mutate(Year = as.numeric(format(`Date Requested`, "%Y")),
Months = factor(months(as.Date(`Date Requested`)),
levels = month.name),
FullNames = paste(`First Name`,`Last Name`))%>%
select(9,10,13,12,17,19,20,21,22)%>%
group_by(FullNames,Year)%>%
summarise(Individual_Charges = sum(Charges))%>%
arrange(desc(Individual_Charges))%>%
filter(Year =="2018")
EmployeeYearlyExpense
##individual employee expenses
EmployeeYearlyExpense <-
New.UberData%>%
mutate(Year = as.numeric(format(`Date Requested`, "%Y")),
Months = factor(months(as.Date(`Date Requested`)),
levels = month.name),
FullNames = paste(`First Name`,`Last Name`))%>%
select(9,10,13,12,17,19,20,21,22)%>%
group_by(FullNames,Year)%>%
summarise(Individual_Charges = sum(Charges))%>%
arrange(desc(Individual_Charges))%>%
filter(Year =="2017")
EmployeeYearlyExpense
###analysis by time of order
AnalysisByTime <-
New.UberData%>%
mutate(FullNames = paste(`First Name`,`Last Name`))%>%
select(9,10,13,12,17,19,20,21,22)%>%
group_by(hours)%>%
summarise(No.OfOrders = n()) %>%
arrange(desc(No.OfOrders))
New.UberData
##Analysis by day of week
AnalysisByDayOfWeek <-
New.UberData%>%
mutate(FullNames = paste(`First Name`,`Last Name`))%>%
select(9,10,13,12,17,19,20,21,22)%>%
filter(Year == "2018")%>%
group_by(dayofweek)%>%
summarise(No.OfOrders = n()) %>%
arrange(desc(No.OfOrders))
AnalysisByDayOfWeek
##Analysis by day of week
AnalysisByDayOfWeek <-
New.UberData%>%
mutate(FullNames = paste(`First Name`,`Last Name`))%>%
select(9,10,13,12,17,19,20,21,22)%>%
#filter(Year == "2018")%>%
group_by(dayofweek)%>%
summarise(No.OfOrders = n()) %>%
arrange(desc(No.OfOrders))
AnalysisByDayOfWeek
##Analysis by day of week
AnalysisByDayOfWeek <-
New.UberData%>%
mutate(FullNames = paste(`First Name`,`Last Name`))%>%
select(9,10,13,12,17,19,20,21,22)%>%
#filter(Year == "2018")%>%
group_by(dayofweek,Year)%>%
summarise(No.OfOrders = n()) %>%
arrange(desc(No.OfOrders))
AnalysisByDayOfWeek
ggplot(AnalysisByDayOfWeek,aes(fill = dayofweek,x = dayofweek,y = No.OfOrders))+
geom_histogram(position = "dodge",stat = "identity")+
facet_grid(.~Year)+
ggtitle("Analysis by day of week")
##evaluating correlation between distance,Fare and Duration
## Our hypothesis - they are correlated
Data.f <-
New.UberData%>%
select(Distance,Fare,Duration)
cor(Data.f)
New.UberData
##evaluating correlation between distance,Fare and Duration
## Our hypothesis - they are correlated
Data.f <-
New.UberData%>%
select(Distance,Charges,Duration)
cor(Data.f)
head(New.UberData)
lm(formula =  Charges~Distance, data = New.UberData)
##predicting annual expense by expense code
model <- lm(formula =  Charges~Distance, data = New.UberData)
summary(model)
New.UberData%>%
filter(Year == "2018")
lm(formula =  Charges~Distance, data = New.UberData)
##predicting annual expense by expense code
Dta.2018 <-
New.UberData%>%
filter(Year == "2018")
lm(formula =  Charges~Distance, data = Dta.2018)
model <- lm(formula =  Charges~Distance, data = Dta.2018)
summary(model)
New.UberData%>%
filter(Year == "2018")%>%
summarise(sums = sum(Charges))
YearlyData
162.0287+53.7061*733777
162.0287+53.7061*475484
library(dplyr)
library(readr)
library(stats)
library(chron)
library(tidyverse)
library(data.table)
library(hrbrthemes)
library(tidyr)
library(viridis)
library(ggpubr)
library(psych)
library(lubridate)
library(ggrepel)
library(forcats)
library(scales)
##consuming in the 2018 Data
UberData <- read.csv("UberData.csv",header = TRUE, stringsAsFactors = FALSE)
##cleaning and processing the Data my data
New.UberData <-
UberData%>%
mutate(Duration = as.numeric(Duration..min.),
GST = as.numeric(GST.amount),
datetime = paste(Request.Date..Local.,Request.Time..Local.),
"Request Time" = strptime(datetime, format = "%m/%d/%Y %H:%M"),
"Date Requested" = as.IDate(`Request Time`),
dayofweek = weekdays(`Date Requested`),
"Time Requested" = format(strptime(`Request.Time..Local.`,"%I:%M %p"),
format = "%H:%M"),
hours = as.numeric(format(strptime(`Request.Time..Local.`,"%I:%M %p"),
format = "%H")),
Year = as.numeric(format(`Date Requested`, "%Y")),
Months = factor(months(as.Date(`Date Requested`)),
levels = month.name))%>%
select(-c(1,2,9,10,20,21))%>%
rename("First Name" = First.Name,
"Last Name" = Last.Name,
"Employee ID" = Employee.ID,
"Distance" = Distance..mi.,
"Service and Tech Fees"= Service.and.Technology.Fee,
"Dropoff Address"= Dropoff.Address,
"Pickup Address" = Pickup.Address,
"Expense Code"= Expense.Code,
"Expense Memo"= Expense.Memo,
"Fare" = Fare.in.KES,
"Charges" = Total.Charge.in.KES)
##handling missing values by replacing them with 0
New.UberData$GST[which(is.na(New.UberData$GST))] <- 0
##Exploratory Data Analysis
##analysis by year
YearlyData <-
New.UberData%>%
mutate(Year = as.numeric(format(`Date Requested`, "%Y")))%>%
select(Charges,Months,Year)%>%
group_by(Year)%>%
summarise(summedTotals = sum(Charges))
percentages <-
function(x){
(x/sum(x))*100
}
Prop <- percentages(YearlyData$summedTotals)
NewYearly.Data <- round(cbind(YearlyData,Prop))
ggplot(NewYearly.Data, aes(x = "", y = summedTotals,
fill = fct_inorder(as.character(Year)))) +
geom_col(width = 1, color = 1) +
geom_text(aes(label = as.character(NewYearly.Data$Year)),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y") +
guides(fill = guide_legend(title = "Year")) +
scale_y_continuous(breaks = NewYearly.Data$Year,
labels = as.character(NewYearly.Data$Prop)) +
theme(axis.ticks = element_blank(),
axis.title = element_blank(),
axis.text = element_text(size = 15),
legend.position = "none",
panel.background = element_rect(fill = "white"))
###analysis of expenditure trends by months
MonthlyData <-
New.UberData%>%
mutate(Year = as.numeric(format(`Date Requested`, "%Y")),
Months = factor(months(as.Date(`Date Requested`)),
levels = month.name))%>%
select(Charges,Months,Year)%>%
group_by(Months, Year)%>%
summarise(MonthlyTotals = sum(Charges))
New.UberData%>%
mutate(FullNames = paste(`First Name`,`Last Name`))%>%
select(9,10,13,12,17,19,20,21,22)%>%
filter(Year == "2018")%>%
group_by(dayofweek)%>%
summarise(No.OfOrders = n()) %>%
arrange(desc(No.OfOrders))
AnalysisByDayOfWeek <-
New.UberData%>%
mutate(FullNames = paste(`First Name`,`Last Name`))%>%
select(9,10,13,12,17,19,20,21,22)%>%
#filter(Year == "2018")%>%
group_by(dayofweek,Year)%>%
summarise(No.OfOrders = n()) %>%
arrange(desc(No.OfOrders))
AnalysisByDayOfWeek
##there is stronger positive correlation between fare and distance
head(New.UberData)
##Employee analysis by time of order and amount paid
Order_Amount <-
New.UberData%>%
select(Charges,hours)
cor(Order_Amount)
##evaluating correlation between distance,Fare and Duration
## Our hypothesis - they are correlated
Data.f <-
New.UberData%>%
select(Distance,Charges,Duration)
cor(Data.f)
##predicting annual expense by expense code
Dta.2018 <-
New.UberData%>%
filter(Year == "2018")
Dta.2018
New.UberData%>%
filter(Year == "2018")%>%
select(Charges, Distance, Duration)
##predicting annual expense by expense code
Dta.2018 <-
New.UberData%>%
filter(Year == "2018")%>%
select(Charges, Distance, Duration)
split.Data <- sample(c(rep(0, 0.7 * nrow(Dta.2018)), rep(1, 0.3 * nrow(Dta.2018))))
table(split.Data)
trainData <- Dta.2018[split.Data == 0,]
testData <- Dta.2018[split.Data == 1,]
model <- lm(formula =  Charges~Distance+Duration, data = trainData)
summary(model)
